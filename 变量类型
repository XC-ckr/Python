Python支持四种不同的数字类型：

int（有符号整型）
long（长整型，也可以代表八进制和十六进制）
float（浮点型）
complex（复数）

##

str = 'Hello World!'    空格也算字符

print （str     ）      # 输出完整字符串
print （str[0]  ）      # 输出字符串中的第一个字符
print （str[2:5]）      # 输出字符串中第三个至第六个之间的字符串
print （str[2:] ）      # 输出从第三个字符开始的字符串
print （str * 2 ）      # 输出字符串两次
print （str + "TEST"）  # 输出连接的字符串

Hello World!
H
llo
llo World!
Hello World!Hello World!
Hello World!TEST

len(str)
str.upper()改为大写
str.lower()改为小写
str.find('H')返回寻找的索引0
str.replace()替换
print('...' in str)返回布尔值

##

list = [ 'runoob', 786 , 2.23, 'john', 70.2 ]
tinylist = [123, 'john']
 
print list               # 输出完整列表
print list[0]            # 输出列表的第一个元素
print list[1:3]          # 输出第二个至第三个元素 
print list[2:]           # 输出从第三个开始至列表末尾的所有元素
print tinylist * 2       # 输出列表两次
print list + tinylist    # 打印组合的列表

['runoob', 786, 2.23, 'john', 70.2]
runoob
[786, 2.23]
[2.23, 'john', 70.2]
[123, 'john', 123, 'john']
['runoob', 786, 2.23, 'john', 70.2, 123, 'john']

Python 列表截取可以接收第三个参数，参数作用是截取的步长
list[1:4:2] =[789 , 'john' ]

##

元组相当于只读列表，不可更新
tuple = ( 'runoob', 786 , 2.23, 'john', 70.2 )
tinytuple = (123, 'john')
 
print tuple               # 输出完整元组
print tuple[0]            # 输出元组的第一个元素
print tuple[1:3]          # 输出第二个至第四个（不包含）的元素 
print tuple[2:]           # 输出从第三个开始至列表末尾的所有元素
print tinytuple * 2       # 输出元组两次
print tuple + tinytuple   # 打印组合的元组
以上实例输出结果：

('runoob', 786, 2.23, 'john', 70.2)
runoob
(786, 2.23)
(2.23, 'john', 70.2)
(123, 'john', 123, 'john')
('runoob', 786, 2.23, 'john', 70.2, 123, 'john')

##

字典
dict = {}
dict['one'] = "This is one"
dict[2] = "This is two"
 
tinydict = {'name': 'runoob','code':6734, 'dept': 'sales'}
 
 
print dict['one']          # 输出键为'one' 的值
print dict[2]              # 输出键为 2 的值
print tinydict             # 输出完整的字典
print tinydict.keys()      # 输出所有键
print tinydict.values()    # 输出所有值
